#import type.graphql
#import mutation.graphql

type Query @middleware(checks: ["auth:api"]){
    users: [User!]! @all
    user(id: ID @eq): User @find
    usersPaginate: [User!]! @paginate
    user(id: ID @eq): User @find
   
    categories: [Category!]! @all

    products(orderBy: [OrderByClause!] @orderBy): [Product!]! @all
    product(id: ID @eq): Product @find
    detailProduct (id: ID! @eq) : Product @find

    productes: [Product!]! @all
    orderForSevenDays: [Order!]! @field(resolver: "OrderQuery@orderForSevenDays")
    netForFiveMonths: [NetForFiveMonths!]! @field(resolver: "OrderQuery@netForFiveMonths")
    lostForFiveMonths: [LostForFiveMonths!]! @field(resolver: "OrderQuery@lostForFiveMonths")
}

extend type Query{
    roles: [Roles!]! @all

    emailuser(email: String @eq): User @find

    townships (state_id: String @eq): [Townships] @all
    
    states: [States!]! @all

    businesscat: [BusinessCategory!]! @all
}

input OrderByClause{
    field: String!
    order: SortOrder!
}

enum SortOrder {
    ASC
    DESC
}
